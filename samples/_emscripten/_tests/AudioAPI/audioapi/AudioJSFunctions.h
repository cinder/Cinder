#pragma once
#include <emscripten.h>



/**
 * This loads the audio worklet processor. The graph gets generated by Cinder, converted and executed with the appropriate
 * JS calls, and then attached to the output here when the context's enable() function is called. . 
 * Note - if something is wrong errors are thus far un-helpful :( 
 * 
 * Also note that you must use semi-colons :/ 
 * For some reason, EM_JS requires them. 
 */ 
EM_JS(void,load_processor,(const char * source),{
   
   
    let ctx = CINDER_AUDIO.globalContext;
    source = UTF8ToString( source );
    source = CINDER_FILEIO.sourceToBlob( source );

    // initialize the AudioWorkletProcessor. This will handle all custom node processing and 
    // feed the inputs and outputs to our CustomNode objects. 
    ctx.audioWorklet.addModule( source ).then(() => {

        // sort graph into the correct order
        CINDER_WORKLETS.sortGraph();

    }).catch(function(e){
        console.log("An error occured - ",e);
    });
});
EM_JS(void,check_graph,(),{
   
   console.log(window.CINDER_WORKLETS.graph);
});